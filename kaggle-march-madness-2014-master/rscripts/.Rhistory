game.id <- paste(TEST_SEASON, as.character(team1), as.character(team2), sep='_')
output.game.id[i] <- game.id
output.pred[i] <- pwin
}
detach(test.data)
output <- data.frame(id=output.game.id, pred=output.pred)
write.csv(output, file=TEST_OUTPUT, quote=F, row.names=F)
library(randomForest)
source('load_data.R')
process.data <- function(data) {
data$wlk_hrank_last_vs_first <- NULL
data$dol_hrank_last_vs_first <- NULL
data$col_hrank_last_vs_first <- NULL
data$sag_hrank_last_vs_first <- NULL
data$wlk_lrank_last_vs_first <- NULL
data$dol_lrank_last_vs_first <- NULL
data$col_lrank_last_vs_first <- NULL
data$sag_lrank_last_vs_first <- NULL
data$wlk_hrank_last_vs_first_ps <- NULL
data$dol_hrank_last_vs_first_ps <- NULL
data$col_hrank_last_vs_first_ps <- NULL
data$sag_hrank_last_vs_first_ps <- NULL
data$wlk_lrank_last_vs_first_ps <- NULL
data$dol_lrank_last_vs_first_ps <- NULL
data$col_lrank_last_vs_first_ps <- NULL
data$sag_lrank_last_vs_first_ps <- NULL
data$hseed_median_ps <- NULL
data$lseed_median_ps <- NULL
data$col_lrank_last <- NULL
data$sag_lrank_last <- NULL
data$wlk_hrank_last <- NULL
data$lseed_skew_eps <- NULL
data$lseed_median_eps <- NULL
data$lseed_avg_eps <- NULL
data$hseed_kurtosis_eps <- NULL
data$col_lrank_first <- NULL
data$dol_hrank_first <- NULL
data$dol_hrank_last <- NULL
data$hseed_std_eps <- NULL
data$lseed_kurtosis_eps <- NULL
data$sag_lrank_first <- NULL
data$sag_hrank_first <- NULL
data$lseed_std_eps <- NULL
data$hseed_avg_eps <- NULL
data$hseed_median_eps <- NULL
data$hseed_skew_eps <- NULL
data$wlk_hrank_first <- NULL
data$wlk_lrank_first <- NULL
data$wlk_lrank_last <- NULL
data$dol_lrank_first <- NULL
data$dol_lrank_last <- NULL
data$col_hrank_first <- NULL
data$col_hrank_last <- NULL
data$sag_hrank_last <- NULL
data$col_ps_last <- NULL
data$sag_ps_last <- NULL
data$wlk_ps_last <- NULL
data$dol_ps_last <- NULL
data$lseed_std_ps <- NULL
data$hseed_std_ps <- NULL
data$hseed_avg_ps <- NULL
data$lseed_avg_ps <- NULL
data$hseed_kurtosis_ps <- NULL
data$lseed_kurtosis_ps <- NULL
data$hseed <- NULL
data$lseed <- NULL
data$hseed_record <- NULL
data$lseed_record <- NULL
#data$wlk_ps_last_vs_first <- NULL
#data$dol_ps_last_vs_first <- NULL
#data$col_ps_last_vs_first <- NULL
#data$sag_ps_last_vs_first <- NULL
#data$hseed_skew_ps <- NULL
#data$lseed_skew_ps <- NULL
#data$dol_ps_first <- NULL
#data$col_ps_first <- NULL
#data$sag_ps_first <- NULL
#data$wlk_ps_first <- NULL
return(data)
}
data <- process.data(data)
p <- dim(data)[2] - 1
# point spread regression
rf <- randomForest(x=data[,2:dim(data)[2]], y=data[,1], corr.bias=T, do.trace=T,
ntree=501,
mtry=p/2, # default p/3
nodesize=30 # default 5
)
ps <- rf$predicted
win <- as.numeric(rf$y > 0)
logit.model <- glm(win ~ ps, family=binomial)
# apply to test data and write to output
TEST_SEASON <- 'S'
TEST_OUTPUT <- paste(path.expand('~'), '/src/kaggle/kaggle-march-madness-2014/data/rf_predictions.csv', sep='')
predictions <- predict(rf, process.data(test.data))
prob.predictions <- predict(logit.model, data.frame(ps=predictions), type='response')
output.game.id <- rep('', dim(test.data)[1])
output.pred <- rep(0, dim(test.data)[1])
attach(test.data)
for (i in 1:dim(test.data)[1]) {
pwin <- prob.predictions[i]
team1 <- hteam[i]
team2 <- lteam[i]
if (hteam[i] > lteam[i]) {
pwin <- 1 - pwin
team1 <- lteam[i]
team2 <- hteam[i]
}
game.id <- paste(TEST_SEASON, as.character(team1), as.character(team2), sep='_')
output.game.id[i] <- game.id
output.pred[i] <- pwin
}
detach(test.data)
output <- data.frame(id=output.game.id, pred=output.pred)
write.csv(output, file=TEST_OUTPUT, quote=F, row.names=F)
ps <- rf$predicted
win <- as.numeric(rf$y > 0)
logit.model <- glm(win ~ ps, family=binomial)
TEST_OUTPUT <- paste('F:/Grad Projects/March Mania/kaggle-march-madness-2014-master/data/rf_predictions.csv', sep='')
predictions <- predict(rf, process.data(test.data))
prob.predictions <- predict(logit.model, data.frame(ps=predictions), type='response')
output.game.id <- rep('', dim(test.data)[1])
output.pred <- rep(0, dim(test.data)[1])
attach(test.data)
for (i in 1:dim(test.data)[1]) {
pwin <- prob.predictions[i]
team1 <- hteam[i]
team2 <- lteam[i]
if (hteam[i] > lteam[i]) {
pwin <- 1 - pwin
team1 <- lteam[i]
team2 <- hteam[i]
}
game.id <- paste(TEST_SEASON, as.character(team1), as.character(team2), sep='_')
output.game.id[i] <- game.id
output.pred[i] <- pwin
}
detach(test.data)
output <- data.frame(id=output.game.id, pred=output.pred)
write.csv(output, file=TEST_OUTPUT, quote=F, row.names=F)
source('load_data.R')
process.data <- function(data) {
data$wlk_hrank_last_vs_first <- NULL
data$dol_hrank_last_vs_first <- NULL
data$col_hrank_last_vs_first <- NULL
data$sag_hrank_last_vs_first <- NULL
data$wlk_lrank_last_vs_first <- NULL
data$dol_lrank_last_vs_first <- NULL
data$col_lrank_last_vs_first <- NULL
data$sag_lrank_last_vs_first <- NULL
data$wlk_ps_last_vs_first <- NULL
data$dol_ps_last_vs_first <- NULL
data$col_ps_last_vs_first <- NULL
data$sag_ps_last_vs_first <- NULL
data$wlk_hrank_last_vs_first_ps <- NULL
data$dol_hrank_last_vs_first_ps <- NULL
data$col_hrank_last_vs_first_ps <- NULL
data$sag_hrank_last_vs_first_ps <- NULL
data$wlk_lrank_last_vs_first_ps <- NULL
data$dol_lrank_last_vs_first_ps <- NULL
data$col_lrank_last_vs_first_ps <- NULL
data$sag_lrank_last_vs_first_ps <- NULL
return(data)
}
ndim <- 2
data <- process.data(data)
pca <- princomp(data[,2:dim(data)[2]], cor=T)
pcadata <- data.frame(pca$scores[,1:ndim])
#pcadata$Comp.4 <- NULL
pcadata$target <- as.numeric(data$target > 0)
model <- glm(target~., data=pcadata, family=binomial)
TEST_SEASON <- 'Q'
TEST_OUTPUT <- paste('F:/Grad Projects/March Mania/kaggle-march-madness-2014-master/data/pca_logit_predictions.csv', sep='')
test.data <- process.data(test.data)
pca.test.data <- predict(pca, newdata=test.data)
pca.test.data <- data.frame(pca.test.data[,1:ndim])
predictions <- predict(model, pca.test.data, type='response')
output.game.id <- rep('', dim(test.data)[1])
output.pred <- rep(0, dim(test.data)[1])
attach(test.data)
for (i in 1:dim(test.data)[1]) {
pwin <- predictions[i]
team1 <- hteam[i]
team2 <- lteam[i]
if (hteam[i] > lteam[i]) {
pwin <- 1 - pwin
team1 <- lteam[i]
team2 <- hteam[i]
}
game.id <- paste(TEST_SEASON, as.character(team1), as.character(team2), sep='_')
output.game.id[i] <- game.id
output.pred[i] <- pwin
}
detach(test.data)
output <- data.frame(id=output.game.id, pred=output.pred)
write.csv(output, file=TEST_OUTPUT, quote=F, row.names=F)
source('load_data.R')
library(neuralnet)
process.data <- function(data) {
data$wlk_hrank_last_vs_first <- NULL
data$dol_hrank_last_vs_first <- NULL
data$col_hrank_last_vs_first <- NULL
data$sag_hrank_last_vs_first <- NULL
data$wlk_lrank_last_vs_first <- NULL
data$dol_lrank_last_vs_first <- NULL
data$col_lrank_last_vs_first <- NULL
data$sag_lrank_last_vs_first <- NULL
data$wlk_hrank_last_vs_first_ps <- NULL
data$dol_hrank_last_vs_first_ps <- NULL
data$col_hrank_last_vs_first_ps <- NULL
data$sag_hrank_last_vs_first_ps <- NULL
data$wlk_lrank_last_vs_first_ps <- NULL
data$dol_lrank_last_vs_first_ps <- NULL
data$col_lrank_last_vs_first_ps <- NULL
data$sag_lrank_last_vs_first_ps <- NULL
data$hseed_median_ps <- NULL
data$lseed_median_ps <- NULL
data$col_lrank_last <- NULL
data$sag_lrank_last <- NULL
data$wlk_hrank_last <- NULL
data$lseed_skew_eps <- NULL
data$lseed_median_eps <- NULL
data$lseed_avg_eps <- NULL
data$hseed_kurtosis_eps <- NULL
data$col_lrank_first <- NULL
data$dol_hrank_first <- NULL
data$dol_hrank_last <- NULL
data$hseed_std_eps <- NULL
data$lseed_kurtosis_eps <- NULL
data$sag_lrank_first <- NULL
data$sag_hrank_first <- NULL
data$lseed_std_eps <- NULL
data$hseed_avg_eps <- NULL
data$hseed_median_eps <- NULL
data$hseed_skew_eps <- NULL
data$wlk_hrank_first <- NULL
data$wlk_lrank_first <- NULL
data$wlk_lrank_last <- NULL
data$dol_lrank_first <- NULL
data$dol_lrank_last <- NULL
data$col_hrank_first <- NULL
data$col_hrank_last <- NULL
data$sag_hrank_last <- NULL
data$col_ps_last <- NULL
data$sag_ps_last <- NULL
data$wlk_ps_last <- NULL
data$dol_ps_last <- NULL
data$lseed_std_ps <- NULL
data$hseed_std_ps <- NULL
data$hseed_avg_ps <- NULL
data$lseed_avg_ps <- NULL
data$hseed_kurtosis_ps <- NULL
data$lseed_kurtosis_ps <- NULL
data$hseed <- NULL
data$lseed <- NULL
data$hseed_record <- NULL
data$lseed_record <- NULL
#data$wlk_ps_last_vs_first <- NULL
#data$dol_ps_last_vs_first <- NULL
#data$col_ps_last_vs_first <- NULL
#data$sag_ps_last_vs_first <- NULL
#data$hseed_skew_ps <- NULL
#data$lseed_skew_ps <- NULL
#data$dol_ps_first <- NULL
#data$col_ps_first <- NULL
#data$sag_ps_first <- NULL
#data$wlk_ps_first <- NULL
return(data)
}
# prune features and train logit model
data <- process.data(data)
data$target <- as.numeric(data$target > 0)
n <- names(data)
f <- as.formula(paste("target ~", paste(n[!n %in% "target"], collapse = " + ")))
net <- neuralnet(f, data, hidden=3, threshold=0.01, linear.output=F, act.fct='logistic', err.fct='ce')
# apply to test data and write to output
TEST_SEASON <- 'S'
source('load_data.R')
library(neuralnet)
install.packages("neuralnet")
library(neuralnet)
process.data <- function(data) {
data$wlk_hrank_last_vs_first <- NULL
data$dol_hrank_last_vs_first <- NULL
data$col_hrank_last_vs_first <- NULL
data$sag_hrank_last_vs_first <- NULL
data$wlk_lrank_last_vs_first <- NULL
data$dol_lrank_last_vs_first <- NULL
data$col_lrank_last_vs_first <- NULL
data$sag_lrank_last_vs_first <- NULL
data$wlk_hrank_last_vs_first_ps <- NULL
data$dol_hrank_last_vs_first_ps <- NULL
data$col_hrank_last_vs_first_ps <- NULL
data$sag_hrank_last_vs_first_ps <- NULL
data$wlk_lrank_last_vs_first_ps <- NULL
data$dol_lrank_last_vs_first_ps <- NULL
data$col_lrank_last_vs_first_ps <- NULL
data$sag_lrank_last_vs_first_ps <- NULL
data$hseed_median_ps <- NULL
data$lseed_median_ps <- NULL
data$col_lrank_last <- NULL
data$sag_lrank_last <- NULL
data$wlk_hrank_last <- NULL
data$lseed_skew_eps <- NULL
data$lseed_median_eps <- NULL
data$lseed_avg_eps <- NULL
data$hseed_kurtosis_eps <- NULL
data$col_lrank_first <- NULL
data$dol_hrank_first <- NULL
data$dol_hrank_last <- NULL
data$hseed_std_eps <- NULL
data$lseed_kurtosis_eps <- NULL
data$sag_lrank_first <- NULL
data$sag_hrank_first <- NULL
data$lseed_std_eps <- NULL
data$hseed_avg_eps <- NULL
data$hseed_median_eps <- NULL
data$hseed_skew_eps <- NULL
data$wlk_hrank_first <- NULL
data$wlk_lrank_first <- NULL
data$wlk_lrank_last <- NULL
data$dol_lrank_first <- NULL
data$dol_lrank_last <- NULL
data$col_hrank_first <- NULL
data$col_hrank_last <- NULL
data$sag_hrank_last <- NULL
data$col_ps_last <- NULL
data$sag_ps_last <- NULL
data$wlk_ps_last <- NULL
data$dol_ps_last <- NULL
data$lseed_std_ps <- NULL
data$hseed_std_ps <- NULL
data$hseed_avg_ps <- NULL
data$lseed_avg_ps <- NULL
data$hseed_kurtosis_ps <- NULL
data$lseed_kurtosis_ps <- NULL
data$hseed <- NULL
data$lseed <- NULL
data$hseed_record <- NULL
data$lseed_record <- NULL
#data$wlk_ps_last_vs_first <- NULL
#data$dol_ps_last_vs_first <- NULL
#data$col_ps_last_vs_first <- NULL
#data$sag_ps_last_vs_first <- NULL
#data$hseed_skew_ps <- NULL
#data$lseed_skew_ps <- NULL
#data$dol_ps_first <- NULL
#data$col_ps_first <- NULL
#data$sag_ps_first <- NULL
#data$wlk_ps_first <- NULL
return(data)
}
# prune features and train logit model
data <- process.data(data)
data$target <- as.numeric(data$target > 0)
n <- names(data)
f <- as.formula(paste("target ~", paste(n[!n %in% "target"], collapse = " + ")))
net <- neuralnet(f, data, hidden=3, threshold=0.01, linear.output=F, act.fct='logistic', err.fct='ce')
# apply to test data and write to output
TEST_SEASON <- 'S'
TEST_SEASON <- 'S'
TEST_OUTPUT <- paste('F:/Grad Projects/March Mania/kaggle-march-madness-2014-master/data/net_predictions.csv', sep='')
test.data2 <- process.data(test.data)
test.data2$hteam <- NULL
test.data2$lteam <- NULL
predictions <- compute(net, test.data2)$net.result[,1]
#predictions[predictions > .99] <- .99
#predictions[predictions < .01] <- .01
output.game.id <- rep('', dim(test.data)[1])
output.pred <- rep(0, dim(test.data)[1])
attach(test.data)
for (i in 1:dim(test.data)[1]) {
pwin <- predictions[i]
team1 <- hteam[i]
team2 <- lteam[i]
if (hteam[i] > lteam[i]) {
pwin <- 1 - pwin
team1 <- lteam[i]
team2 <- hteam[i]
}
game.id <- paste(TEST_SEASON, as.character(team1), as.character(team2), sep='_')
output.game.id[i] <- game.id
output.pred[i] <- pwin
}
detach(test.data)
output <- data.frame(id=output.game.id, pred=output.pred)
write.csv(output, file=TEST_OUTPUT, quote=F, row.names=F)
library(gbm)
source('load_data.R')
process.data <- function(data) {
data$wlk_hrank_last_vs_first <- NULL
data$dol_hrank_last_vs_first <- NULL
data$col_hrank_last_vs_first <- NULL
data$sag_hrank_last_vs_first <- NULL
data$wlk_lrank_last_vs_first <- NULL
data$dol_lrank_last_vs_first <- NULL
data$col_lrank_last_vs_first <- NULL
data$sag_lrank_last_vs_first <- NULL
data$wlk_hrank_last_vs_first_ps <- NULL
data$dol_hrank_last_vs_first_ps <- NULL
data$col_hrank_last_vs_first_ps <- NULL
data$sag_hrank_last_vs_first_ps <- NULL
data$wlk_lrank_last_vs_first_ps <- NULL
data$dol_lrank_last_vs_first_ps <- NULL
data$col_lrank_last_vs_first_ps <- NULL
data$sag_lrank_last_vs_first_ps <- NULL
data$hseed_median_ps <- NULL
data$lseed_median_ps <- NULL
data$col_lrank_last <- NULL
data$sag_lrank_last <- NULL
data$wlk_hrank_last <- NULL
data$lseed_skew_eps <- NULL
data$lseed_median_eps <- NULL
data$lseed_avg_eps <- NULL
data$hseed_kurtosis_eps <- NULL
data$col_lrank_first <- NULL
data$dol_hrank_first <- NULL
data$dol_hrank_last <- NULL
data$hseed_std_eps <- NULL
data$lseed_kurtosis_eps <- NULL
data$sag_lrank_first <- NULL
data$sag_hrank_first <- NULL
data$lseed_std_eps <- NULL
data$hseed_avg_eps <- NULL
data$hseed_median_eps <- NULL
data$hseed_skew_eps <- NULL
data$wlk_hrank_first <- NULL
data$wlk_lrank_first <- NULL
data$wlk_lrank_last <- NULL
data$dol_lrank_first <- NULL
data$dol_lrank_last <- NULL
data$col_hrank_first <- NULL
data$col_hrank_last <- NULL
data$sag_hrank_last <- NULL
data$col_ps_last <- NULL
data$sag_ps_last <- NULL
data$wlk_ps_last <- NULL
data$dol_ps_last <- NULL
data$lseed_std_ps <- NULL
data$hseed_std_ps <- NULL
data$hseed_avg_ps <- NULL
data$lseed_avg_ps <- NULL
data$hseed_kurtosis_ps <- NULL
data$lseed_kurtosis_ps <- NULL
data$hseed <- NULL
data$lseed <- NULL
data$hseed_record <- NULL
data$lseed_record <- NULL
#data$wlk_ps_last_vs_first <- NULL
#data$dol_ps_last_vs_first <- NULL
#data$col_ps_last_vs_first <- NULL
#data$sag_ps_last_vs_first <- NULL
#data$hseed_skew_ps <- NULL
#data$lseed_skew_ps <- NULL
#data$dol_ps_first <- NULL
#data$col_ps_first <- NULL
#data$sag_ps_first <- NULL
#data$wlk_ps_first <- NULL
return(data)
}
data <- process.data(data)
p <- dim(data)[2] - 1
model <- gbm(target~., data=data, n.trees=10000, cv.folds=10, shrinkage=1e-3, interaction.depth=10, n.minobsinnode=10)
# convert point spread to win probability with logit model
ps <- model$cv.fitted
win <- as.numeric(data$target > 0)
logit.model <- glm(win ~ ps, family=binomial)
# apply to test data and write to output
TEST_SEASON <- 'S'
ps <- model$cv.fitted
win <- as.numeric(data$target > 0)
logit.model <- glm(win ~ ps, family=binomial)
TEST_OUTPUT <- paste('F:/Grad Projects/March Mania/kaggle-march-madness-2014-master/data/gbm_predictions.csv', sep='')
predictions <- predict(model, process.data(test.data))
output.game.id <- rep('', dim(test.data)[1])
output.pred <- rep(0, dim(test.data)[1])
attach(test.data)
for (i in 1:dim(test.data)[1]) {
pwin <- prob.predictions[i]
team1 <- hteam[i]
team2 <- lteam[i]
if (hteam[i] > lteam[i]) {
pwin <- 1 - pwin
team1 <- lteam[i]
team2 <- hteam[i]
}
game.id <- paste(TEST_SEASON, as.character(team1), as.character(team2), sep='_')
output.game.id[i] <- game.id
output.pred[i] <- pwin
}
detach(test.data)
output <- data.frame(id=output.game.id, pred=output.pred)
write.csv(output, file=TEST_OUTPUT, quote=F, row.names=F)
logit.predictions <- paste('F:/Grad Projects/March Mania/kaggle-march-madness-2014-master/data/logit_predictions.csv', sep='')
rf.predictions <- paste('F:/Grad Projects/March Mania/kaggle-march-madness-2014-master/data/rf_predictions.csv', sep='')
net.predictions <- paste('F:/Grad Projects/March Mania/kaggle-march-madness-2014-master/data/net_predictions.csv', sep='')
gbm.predictions <- paste('F:/Grad Projects/March Mania/kaggle-march-madness-2014-master/data/gbm_predictions.csv', sep='')
logit.df <- read.table(logit.predictions, sep=',', header=T)
rf.df <- read.table(rf.predictions, sep=',', header=T)
net.df <- read.table(net.predictions, sep=',', header=T)
gbm.df <- read.table(gbm.predictions, sep=',', header=T)
predictions <- cbind(logit.df$pred, rf.df$pred, net.df$pred, gbm.df$pred)
ensemble.predictions <- paste('F:/Grad Projects/March Mania/kaggle-march-madness-2014-master/data/test_predictions.csv', sep='')
write.csv(data.frame(id=logit.df$id, pred=pred), file=ensemble.predictions, quote=F, row.names=F)
pred <- (1/3)*logit.df$pred + (1/6)*rf.df$pred + (1/3)*net.df$pred + (1/6)*gbm.df$pred
ensemble.predictions <- paste('F:/Grad Projects/March Mania/kaggle-march-madness-2014-master/data/test_predictions.csv', sep='')
write.csv(data.frame(id=logit.df$id, pred=pred), file=ensemble.predictions, quote=F, row.names=F)
ensemble.predictions <- paste('F:/Grad Projects/March Mania/kaggle-march-madness-2014-master/data/test_predictions.csv', sep='')
write.csv(data.frame(id=logit.df$id, pred=pred), file=ensemble.predictions, quote=F, row.names=F)
pred <- (1/3)*logit.df$pred + (1/6)*rf.df$pred + (1/3)*net.df$pred + (1/6)*gbm.df$pred
ensemble.predictions <- paste('F:/Grad Projects/March Mania/kaggle-march-madness-2014-master/data/test_predictions.csv', sep='')
write.csv(data.frame(id=logit.df$id, pred=pred), file=ensemble.predictions, quote=F, row.names=F)
